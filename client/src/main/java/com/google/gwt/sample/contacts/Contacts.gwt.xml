<?xml version="1.0" encoding="UTF-8"?>
<module rename-to='contacts'>
  <inherits name='com.google.gwt.user.User'/>
  <inherits name='com.google.gwt.user.theme.clean.Clean'/>
  <inherits name="com.google.gwt.activity.Activity"/>
  <inherits name="com.google.gwt.place.Place"/>
  <inherits name="com.google.gwt.inject.Inject"/>
  <inherits name="com.google.gwt.logging.Logging"/>

  <entry-point class='com.google.gwt.sample.contacts.client.Contacts'/>

  <source path='client'/>
  <source path='shared'/>

  <set-configuration-property name="UiBinder.useSafeHtmlTemplates" value="true"/>

  <!-- Compile for Firefox and Chrome -->
  <!-- If you compile for only one browser, the browser detection javascript is optimised away and then Hosted Mode doesn't work -->
  <set-property name="user.agent" value="gecko1_8,safari"/>

  <!-- To change the default logLevel -->
  <set-property name="gwt.logging.logLevel" value="INFO"/>
  <!-- TRUE or FALSE to enable logging at all -->
  <set-property name="gwt.logging.enabled" value="TRUE"/>
  <!-- ENABLED OR DISABLED for different Handlers -->

  <set-property name="gwt.logging.consoleHandler" value="ENABLED"/>
  <set-property name="gwt.logging.popupHandler" value="DISABLED" />

  <!-- Enable remote logger -->
  <set-property name="gwt.logging.simpleRemoteHandler" value="ENABLED" />
  <!--
  <set-property name="gwt.logging.developmentModeHandler" value="DISABLED" />
  <set-property name="gwt.logging.systemHandler" value="DISABLED" />
  <set-property name="gwt.logging.firebugHandler" value="DISABLED" />
  <set-property name="gwt.logging.simpleRemoteHandler" value="ENABLED" />
  -->

  <!-- Some optimisations. See CompilerParameters.gwt.xml for more compiler options -->
  <!-- The following should all be guarded in production mode only? -->

  <!-- Strips out type names in payload. Minimizes size -->
  <inherits name="com.google.gwt.user.RemoteServiceObfuscateTypeNames"/>

  <!-- Remove client side stack info. Can reduce javascript size by 15% -->
  <set-property name="compiler.stackMode" value="strip" />

  <!--
    Whether or not the compiler should alter Enum.name() to return
    ordinal() as a way of obfuscating Enum field identifiers.

    Can reduce javascript size if use lots of enums or large enums
  -->
   <set-configuration-property name="compiler.enum.obfuscate.names" value="true" />


  <!-- Obfuscates class names on client. Should be enabled if using UIBinder to manage class names. -->
  <set-property name="CssResource.obfuscationPrefix" value="empty" />
</module>
